exit
resultados.calcula_performance
resultados
exit
Resultado.all
exit
Resultado.create! attr
Resultado.create!
attr = {periodo: row[:periodo], valor_meta: BigDecimal(row[:valor_meta]).to_f, valor_realizado: BigDecimal(row[:valor_realizado]).to_f, cliente_id: 1}
attr = {periodo: row[:periodo], valor_meta: BigDecimal(row[:valor_meta]).to_f, valor_realizado: BigDecimal(row[:valor_realizado]).to_f, cliente_id:; 1}
attr = {periodo: row[:periodo], valor_meta: BigDecimal(row[:valor_meta]).to_f, valor_realizado: BigDecimal(row[:valor_realizado], cliente_id: 1).to_f}
attr = {periodo: row[:periodo], valor_meta: BigDecimal(row[:valor_meta]).to_f, valor_realizado: BigDecimal(row[:valor_realizado], client_id: 1).to_f}
cliente.resultado.create! attr
attr = {periodo: row[:periodo], valor_meta: BigDecimal(row[:valor_meta]).to_f, valor_realizado: BigDecimal(row[:valor_realizado]).to_f}
cliente.resultado.create!(periodo: row[:periodo], valor_meta: BigDecimal(row[:valor_meta]).to_f, valor_realizado: BigDecimal(row[:valor_realizado]).to_f)
BigDecimal(row[:valor_meta]).to_f
BigDecimal(row[:valor_meta]) == 10
row[:valor_meta].to_s.to_f
row[:valor_meta]
row[:valor_meta].to_s
Resultado.create!(cliente_id: 1, periodo: row[:periodo], valor_meta: row[:valor_meta].to_f, valor_realizado: row[:valor_realizado].to_f)
Resultado.create!(client_id: 1, periodo: row[:periodo], valor_meta: row[:valor_meta].to_f, valor_realizado: row[:valor_realizado].to_f)
Resultado.create!(periodo: row[:periodo], valor_meta: row[:valor_meta].to_f, valor_realizado: row[:valor_realizado].to_f)
cliente.resultado.create!(periodo: row[:periodo], valor_meta: row[:valor_meta].to_f, valor_realizado: row[:valor_realizado].to_f)
row[:valor_meta].to_f
resultado
exit
row[:valor_meta].to_f
row[:valor_meta]
row[:;valor_meta]
row["valor_meta"]
row
row['valor_meta'].to_f
"10".to_f
resultado
exit
BigDecimal("10")
BigDecimal.to_d("10")
BigDecimal.to_d("10",0)
BigDecimal("10",0)
BigDecimal.new("10",0)
BigDecimal("10",0)
BigDecimal("10")
BigDecimal("12")
BigDecimal("10")
BigDecimal('10')
row[:valor_meta].to_s
BigDecimal(row[:valor_meta].to_s)
BigDecimal(row[:valor_meta])
row[:valor_meta].to_f
require 'bigdecimal'
cliente.resultado.create!(periodo: row[:periodo], valor_meta: row[:valor_meta], valor_realizado: row[:valor_realizado])
row[:valor_meta]
row
resultado
exit
resultado
row
exit
row
resultado
continue
dia
mes
continue
partes
exit
response.body
attr = { cliente_id: cliente.id, periodo: Date.today, valor_meta: 10, valor_realizado: 12 }
cliente
client
exit
response.body
response
Resultado.count()
